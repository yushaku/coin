/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "CryptoZombies",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CryptoZombies__factory>;
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "KittyInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KittyInterface__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "PriceConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceConsumer__factory>;
    getContractFactory(
      name: "Transactions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Transactions__factory>;
    getContractFactory(
      name: "ZombieAttack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieAttack__factory>;
    getContractFactory(
      name: "ZombieFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieFactory__factory>;
    getContractFactory(
      name: "ZombieFeeding",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieFeeding__factory>;
    getContractFactory(
      name: "ZombieHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieHelper__factory>;
    getContractFactory(
      name: "ZombieOwnership",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieOwnership__factory>;

    getContractAt(
      name: "CryptoZombies",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.CryptoZombies>;
    getContractAt(
      name: "AggregatorV3Interface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "ERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "KittyInterface",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.KittyInterface>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "PriceConsumer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.PriceConsumer>;
    getContractAt(
      name: "Transactions",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Transactions>;
    getContractAt(
      name: "ZombieAttack",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ZombieAttack>;
    getContractAt(
      name: "ZombieFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ZombieFactory>;
    getContractAt(
      name: "ZombieFeeding",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ZombieFeeding>;
    getContractAt(
      name: "ZombieHelper",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ZombieHelper>;
    getContractAt(
      name: "ZombieOwnership",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ZombieOwnership>;

    deployContract(
      name: "CryptoZombies",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CryptoZombies>;
    deployContract(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface>;
    deployContract(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "KittyInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KittyInterface>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "PriceConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceConsumer>;
    deployContract(
      name: "Transactions",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Transactions>;
    deployContract(
      name: "ZombieAttack",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieAttack>;
    deployContract(
      name: "ZombieFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieFactory>;
    deployContract(
      name: "ZombieFeeding",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieFeeding>;
    deployContract(
      name: "ZombieHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieHelper>;
    deployContract(
      name: "ZombieOwnership",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieOwnership>;

    deployContract(
      name: "CryptoZombies",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CryptoZombies>;
    deployContract(
      name: "AggregatorV3Interface",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface>;
    deployContract(
      name: "ERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721>;
    deployContract(
      name: "KittyInterface",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KittyInterface>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "PriceConsumer",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PriceConsumer>;
    deployContract(
      name: "Transactions",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Transactions>;
    deployContract(
      name: "ZombieAttack",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieAttack>;
    deployContract(
      name: "ZombieFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieFactory>;
    deployContract(
      name: "ZombieFeeding",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieFeeding>;
    deployContract(
      name: "ZombieHelper",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieHelper>;
    deployContract(
      name: "ZombieOwnership",
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZombieOwnership>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.Contract>;
  }
}
