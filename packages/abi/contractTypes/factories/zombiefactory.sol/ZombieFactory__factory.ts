/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ZombieFactory,
  ZombieFactoryInterface,
} from "../../zombiefactory.sol/ZombieFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "zombieId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
    ],
    name: "NewZombie",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "createRandomZombie",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zombieToOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zombies",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "level",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "readyTime",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "winCount",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "lossCount",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052601060018190556200001890600a6200018a565b600255620151806003553480156200002f57600080fd5b50600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36200019f565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620000cc578160001904821115620000b057620000b062000075565b80851615620000be57918102915b93841c939080029062000090565b509250929050565b600082620000e55750600162000184565b81620000f45750600062000184565b81600181146200010d5760028114620001185762000138565b600191505062000184565b60ff8411156200012c576200012c62000075565b50506001821b62000184565b5060208310610133831016604e8410600b84101617156200015d575081810a62000184565b6200016983836200008b565b806000190482111562000180576200018062000075565b0290505b92915050565b6000620001988383620000d4565b9392505050565b610bc180620001af6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637bff0a011161005b5780637bff0a01146101155780638da5cb5b146101285780638f32d59b14610146578063f2fde38b1461017157600080fd5b80632052465e14610082578063528b7b8f146100b0578063715018a61461010b575b600080fd5b6100956100903660046106c5565b610184565b6040516100a79695949392919061074c565b60405180910390f35b6100e66100be3660046106c5565b60056020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a7565b61011361027a565b005b6101136101233660046107c6565b61030d565b60005473ffffffffffffffffffffffffffffffffffffffff166100e6565b60005473ffffffffffffffffffffffffffffffffffffffff16331460405190151581526020016100a7565b61011361017f366004610895565b610359565b6004818154811061019457600080fd5b90600052602060002090600302016000915090508060000180546101b7906108cb565b80601f01602080910402602001604051908101604052809291908181526020018280546101e3906108cb565b80156102305780601f1061020557610100808354040283529160200191610230565b820191906000526020600020905b81548152906001019060200180831161021357829003601f168201915b505050600184015460029094015492939263ffffffff8082169350640100000000820416915061ffff6801000000000000000082048116916a010000000000000000000090041686565b60005473ffffffffffffffffffffffffffffffffffffffff16331461029e57600080fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b336000908152600660205260409020541561032757600080fd5b600061033282610389565b905061033f60648261091e565b6103499082610988565b905061035582826103cd565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461037d57600080fd5b610386816105f0565b50565b6000808260405160200161039d919061099b565b6040516020818303038152906040528051906020012060001c9050600254816103c6919061091e565b9392505050565b6000600354426103dd91906109b7565b6040805160c08101825285815260208101859052600191810182905263ffffffff8316606082015260006080820181905260a08201819052600480549384018155905280519293509182916003027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190819061045a9082610a19565b5060208201516001808301919091556040830151600290920180546060850151608086015160a09096015161ffff9081166a0100000000000000000000027fffffffffffffffffffffffffffffffffffffffff0000ffffffffffffffffffff919097166801000000000000000002167fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff63ffffffff928316640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000909416929096169190911791909117939093169290921792909217905560045460009161054691610988565b600081815260056020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000016339081179091558352600690915290205490915061059a90600161069d565b336000908152600660205260409081902091909155517f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7906105e190839088908890610b33565b60405180910390a15050505050565b73ffffffffffffffffffffffffffffffffffffffff811661061057600080fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000806106aa83856109b7565b9050838110156106bc576106bc610b5c565b90505b92915050565b6000602082840312156106d757600080fd5b5035919050565b60005b838110156106f95781810151838201526020016106e1565b50506000910152565b6000815180845261071a8160208601602086016106de565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60c08152600061075f60c0830189610702565b60208301979097525063ffffffff948516604082015292909316606083015261ffff908116608083015290911660a090910152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156107d857600080fd5b813567ffffffffffffffff808211156107f057600080fd5b818401915084601f83011261080457600080fd5b81358181111561081657610816610797565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561085c5761085c610797565b8160405282815287602084870101111561087557600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156108a757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146106bc57600080fd5b600181811c908216806108df57607f821691505b602082108103610918577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600082610954577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156106bf576106bf610959565b600082516109ad8184602087016106de565b9190910192915050565b808201808211156106bf576106bf610959565b601f821115610a1457600081815260208120601f850160051c810160208610156109f15750805b601f850160051c820191505b81811015610a10578281556001016109fd565b5050505b505050565b815167ffffffffffffffff811115610a3357610a33610797565b610a4781610a4184546108cb565b846109ca565b602080601f831160018114610a9a5760008415610a645750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610a10565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610ae757888601518255948401946001909101908401610ac8565b5085821015610b2357878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b838152606060208201526000610b4c6060830185610702565b9050826040830152949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fdfea2646970667358221220299d5dd2201dbc2b9c1114637a60b912f6376b8fee8267b53a24c61683d8ee7464736f6c63430008120033";

type ZombieFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZombieFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZombieFactory__factory extends ContractFactory {
  constructor(...args: ZombieFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ZombieFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZombieFactory__factory {
    return super.connect(runner) as ZombieFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZombieFactoryInterface {
    return new Interface(_abi) as ZombieFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ZombieFactory {
    return new Contract(address, _abi, runner) as unknown as ZombieFactory;
  }
}
